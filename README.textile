Ruby版的和平与战争游戏
The book "The Evolution Of Cooperation":http://en.wikipedia.org/wiki/The_Evolution_of_Cooperation (by Robert Axelrod) was a great work. You should definitely "check it out":http://www.amazon.com/Evolution-Cooperation-Robert-Axelrod/dp/0465021212 . (And here is a "Chinese version":http://book.douban.com/subject/2259198/ )

However, the software emulating its system was "implemented with Fortran":http://www.cscs.umich.edu/Software/CC/ECHome.html , and hardly readable. I want to rebuild it with "Ruby":http://www.ruby-lang.org and make it more readable, probably make it an online system and invite people all over the world to contribute their strategies. 

h2. What Is It, After All?

I created a platform to simulate a series of "Iterated Prisoner's Dilemma":http://en.wikipedia.org/wiki/Prisoner%27s_Dilemma (which has also been referred to as the "Peace-War game") games. You can try to build a smartest strategy to win the championship of all the prisoners.

h2. How Can I Participate?

I'm doing it alone so far. You can help by both ways:

h3. Submit Strategies

You can submit a strategy which would be used by a "prisoner" in "Iterated Prisoner's Dilemma":http://en.wikipedia.org/wiki/Prisoner%27s_Dilemma . In order to program a strategy, you need to:

* Create a .rb file (e.g. _*never_forgive.rb*_) within "strategies" directory (or make a subdirectory for yourself, it's your call).
* Define a class for your strategy, which must be a subclass of Strategy:
<blockquote><pre>class MyNiubiStrategy < Strategy
	...
end</pre></blockquote>
* Override/implement _*to_operate?*_ method, which has 2 arguments: the history of your actions and your opponent's. Based on the historical actions, you need to make a decision: am I going to cooperate in this round, or shall I defect/betray?
** To those who don't know Ruby much: the value of last statement in a method would be returned. Return _*false*_ or _*nil*_ causes your prisoner to betray, otherwise he will cooperate.
** Both arguments are arrays. For example, you could use _*opponent_history.last*_ to get the last step your opponent just behaved. "Check the document":http://www.ruby-doc.org/core/classes/Array.html for more detail.
** With each historical action step in any argument, you can call _*cooperative?*_ and _*treacherous?*_ methods to determine its attitude.
* Add your new strategy into _*competition*_ task, which is in _*Rakefile*_.
<blockquote><pre>competitors = [
  AlwaysCooperateStrategy, 
  AlwaysBetrayStrategy, 
  TitForTatStrategy, 
  NeverForgive,
  MyNiubiStrategy,
  RandomStrategy
]</pre></blockquote>
* Finally...invoke _*rake competition*_ in your console, and see if your strategy wins the championship.

h3. Contribute to the Platform

(TBD)

That's it. Read the book if you haven't.
